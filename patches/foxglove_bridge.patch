--- a/ros2_foxglove_bridge/src/ros2_foxglove_bridge.cpp
+++ src/ros-foxglove-bridge/ros2_foxglove_bridge/src/ros2_foxglove_bridge.cpp
@@ -531,11 +531,16 @@
 void FoxgloveBridge::subscribe(foxglove::ChannelId channelId, ConnectionHandle c
                 subscriptionsByClient.size(), topic.c_str(), datatype.c_str(), channelId);
   }
 
+  auto handler = [this, channelId, clientHandle](std::shared_ptr<rclcpp::SerializedMessage> msg)
+  {
+    rosMessageHandler(channelId, clientHandle, msg);
+  };
+
   try {
     auto subscriber = this->create_generic_subscription(
       topic, datatype, qos,
-      std::bind(&FoxgloveBridge::rosMessageHandler, this, channelId, clientHandle, _1),
+      handler,
       subscriptionOptions);
     subscriptionsByClient.emplace(clientHandle, std::move(subscriber));
   } catch (const std::exception& ex) {
@@ -766,7 +771,7 @@
 void FoxgloveBridge::logHandler(LogLevel level, char const* msg) {
   }
 }
 
 void FoxgloveBridge::rosMessageHandler(const foxglove::ChannelId& channelId,
                                        ConnectionHandle clientHandle,
                                        std::shared_ptr<rclcpp::SerializedMessage> msg) {
